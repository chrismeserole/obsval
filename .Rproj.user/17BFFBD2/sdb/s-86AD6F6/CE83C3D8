{
    "contents" : "library(foreign)\ndf <- read.csv(\"/Users/cmes/Downloads/AFdata.csv\")\n\n# note: removed x.ethnic and x.age, because they were integers that (I think?)\n# should have been factors. in any case, their values were preventing\n# the ml estimator from converging\nm <- glmer(y.vfear2 ~ x.cinsecure2 + x.urbrur + x.wealth2 + x.female + \n             x.educ2 + x.relig2 + (1 | x.region) + (1 | x.country), \n           data = df, family = binomial, nAGQ = 1)\n\n# equiv to 'tmpdata <- df[ , ]'\ntmpdat <- df  \n\n# equiv to: \n# jvalues <- with(df, seq(from = min(x.cinsecure2), \n#                        to = max(x.cinsecure2), \n#                        length.out = 2))\njvalues <- c(min(df$x.cinsecure2), max(df$x.cinsecure2))\n\n# note: this works fine be careful with the apply functions. the type of object\n# that they return will vary, with lapply specifically designed to return a \n# list. i'm pretty sure this is part of where the earlier code was going wrong.\npp <- lapply(jvalues, function(j) {\n  tmpdat$x.cinsecure2 <- j\n  predict(m, newdata = tmpdat, type = \"response\")\n})\n\n#\n# TRANSFORM FOR USE IN GGPLOT2\n#\npp <- unlist(pp) # equiv to c(pp[[1]], pp[[2]])\nx.cty <- rep(factor(df$x.country),2)\nx.cin <- rep(df$x.cinsecure2,2)\n\ndf.plot <- data.frame(pp, x.cin, x.cty)\n\n#\n# RUN GGPLOT2\n#\nggplot(df.plot, aes(x = x.cin, y = pp)) + \n  geom_line(aes(colour=x.cty))\n",
    "created" : 1441342668078.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2221197897",
    "id" : "CE83C3D8",
    "lastKnownWriteTime" : 4424257024,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled9"
    },
    "source_on_save" : false,
    "type" : "r_source"
}